import cv2
import numpy as np

img = cv2.imread('resources/shapes.png')
imgContour = img.copy()  # also can be written as =img
imgBW = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
imgCanny = cv2.Canny(img, 100, 100)
cv2.imshow("ing1", imgCanny)
img=imgCanny.copy()

def getContours(img):
    contours, heirarchy = cv2.findContours(img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
    # print(f'{len(contours)}contour(s)found!')
    for cnt in contours:
        area = cv2.contourArea(cnt)
        print(area)

        if area > 500:
            cv2.drawContours(imgContour, cnt, -1, (22, 25, 12), 5)
            peri = cv2.arcLength(cnt, True)
            print(peri)
            approx = cv2.approxPolyDP(cnt, 0.02 * peri, True)
            print(len(approx))
            objcorners = len(approx)
            x, y, w, h = cv2.boundingRect(approx)

            obj = "triangle"
            if objcorners == 3:
                obj = "triangle"
            elif objcorners == 4:
                aspRatio = w / float(h)
            if aspRatio > 0.95 and aspRatio < 1.05:
                obj = "square"
            else:
                obj = 'none'

            cv2.rectangle(imgContour, (x, y), (x + w, y + h), (0, 255, 0), 2)
            cv2.putText(imgContour, obj,
                        (x + (w // 2) - 10, y + (h // 2) - 10, cv2.FONT_HERSHEY_DUPLEX, 0.5, (0, 0, 255), 2))

getContours(imgCanny)
cv2.imshow('new', imgContour)
cv2.waitKey()
